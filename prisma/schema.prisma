generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model UserAuthentication {
  id       Int         @id @default(autoincrement())
  username String      @unique
  password String
  articles ArticleDB[]
  login    Login?
  personal Personal?
}

model Login {
  id     Int                @id @default(autoincrement())
  userId Int                @unique
  user   UserAuthentication @relation(fields: [userId], references: [id])
}

model Personal {
  id            Int                @id @default(autoincrement())
  userId        Int                @unique
  user_name     String?
  user_fame     String?
  age           Int?
  profile_image String?
  email         String?
  number_phone  String?
  academic      String?
  faculty       String?
  department    String?
  userTypeId    Int?
  user_type     UserType?          @relation(fields: [userTypeId], references: [userTypeId], onDelete: NoAction, onUpdate: NoAction)
  user          UserAuthentication @relation(fields: [userId], references: [id])
}

model UserType {
  id            Int
  user_typename String
  userTypeId    Int        @id @default(autoincrement())
  personals     Personal[]
}

model Contributor {
  id               Int         @id @default(autoincrement())
  contributor_name String
  academic_title   String?
  articles         ArticleDB[]

  
}

model ArticleDB {
  id             Int                    @id @default(autoincrement())
  article_name   String
  article_file   String?
  article_status String?
  publish_status String?
  published_year Int?
  articleType    String?
  contributorId  Int?
  abstract       String?
  userId         Int
  user           UserAuthentication     @relation(fields: [userId], references: [id])
  contributor    Contributor?           @relation(fields: [contributorId], references: [id])
  statusHistory  ArticleStatusHistory[]
  categories     Category[]

  
}

model ArticleStatusHistory {
  id             Int       @id @default(autoincrement())
  articleId      Int
  article_status String
  save_history   DateTime  @default(now())
  article        ArticleDB @relation(fields: [articleId], references: [id])
}

model ArticleType {
  id               Int    @id @default(autoincrement())
  article_typename String
}

model Category {
  id        Int       @id @default(autoincrement())
  articleId Int
  summary   String?
  article   ArticleDB @relation(fields: [articleId], references: [id])
}
